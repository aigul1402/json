2) Пользователь@DESKTOP-7069A0U MINGW64 ~
	$ git clone https://github.com/aigul1402/json.git
	Cloning into 'json'...
	remote: Enumerating objects: 37, done.
	remote: Counting objects: 100% (37/37), done.
	remote: Compressing objects: 100% (30/30), done.
	remote: Total 37 (delta 9), reused 14 (delta 1), pack-reused 0
	Receiving objects: 100% (37/37), 9.33 KiB | 735.00 KiB/s, done.
	Resolving deltas: 100% (9/9), done.

Пользователь@DESKTOP-7069A0U MINGW64 ~
$ mv json/ GitHub/

Пользователь@DESKTOP-7069A0U MINGW64 ~
$ cd GitHub/

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub
$ cd json

3) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ vim new.json

	Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
		$ git status
		On branch main
		Your branch is up to date with 'origin/main'.

	Untracked files:
  		(use "git add <file>..." to include in what will be committed)
       		 new.json

		nothing added to commit but untracked files present (use "git add" to track)

4) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ git add new.json

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new.json


5) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ git commit -m "add new.json"
	[main b084ce2] add new.json
	 1 file changed, 0 insertions(+), 0 deletions(-)
	 create mode 100644 new.json

6) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ git push
	Enumerating objects: 4, done.
	Counting objects: 100% (4/4), done.
	Writing objects: 100% (3/3), 256 bytes | 256.00 KiB/s, done.
	Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
	To https://github.com/aigul1402/json.git
   		d34d613..b084ce2  main -> main

7) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ vim new.json

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   new.json

no changes added to commit (use "git add" and/or "git commit -a")

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git add .
warning: LF will be replaced by CRLF in new.json.
The file will have its original line endings in your working directory

8) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ git commit -am "change new.json"
	[main a6930c3] change new.json
 	1 file changed, 6 insertions(+)

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git push
To https://github.com/aigul1402/json.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/aigul1402/json.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git pull new.json
fatal: invalid gitfile format: new.json
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git push


Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git push
To https://github.com/aigul1402/json.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/aigul1402/json.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git pull
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 660 bytes | 18.00 KiB/s, done.
From https://github.com/aigul1402/json
   b084ce2..3f00a1f  main       -> origin/main
Merge made by the 'ort' strategy.
 README.md | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 README.md

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git push
Enumerating objects: 9, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 644 bytes | 644.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/aigul1402/json.git
   3f00a1f..cbebfb8  main -> main

9) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ vim preferences.json

10) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ cat preferences.json
	{
		"favorite movie":"Почему он?",
		"favourite TV series":"Теория большого взрыва",
		"favorite food":"жаренная картошка",
		"favorite time of the year":"зима",
		"the side I want to visit":"Амстердам"
	}


11) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ vim skills.json

	Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ cat skills.json
	{
        	"skills learned in the course": "theory, client-server, HTTP, selects, Json, xml & structure, API, postman, Dev Tools, VPN, mobile testing, charles, fiddler, python"
	}


12) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ git status
	On branch main
	Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        preferences.json
        skills.json

nothing added to commit but untracked files present (use "git add" to track)

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git add .
warning: LF will be replaced by CRLF in preferences.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in skills.json.
The file will have its original line endings in your working directory

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git commit -m "add preferences, skills"
[main 3cedfae] add preferences, skills
 2 files changed, 11 insertions(+)
 create mode 100644 preferences.json
 create mode 100644 skills.json

Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 705 bytes | 705.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/aigul1402/json.git
   cbebfb8..3cedfae  main -> main

17) Пользователь@DESKTOP-7069A0U MINGW64 ~/GitHub/json (main)
	$ git clone https://github.com/aigul1402/json.git
	Cloning into 'json'...
	remote: Enumerating objects: 55, done.
	remote: Counting objects: 100% (55/55), done.
	remote: Compressing objects: 100% (44/44), done.
	remote: Total 55 (delta 15), reused 20 (delta 1), pack-reused 0
	Receiving objects: 100% (55/55), 11.64 KiB | 701.00 KiB/s, done.
	Resolving deltas: 100% (15/15), done.

